start: _stmt+

ident: WORD
newline: NEWLINE?

_stmt:       _expr newline
            | layer_def newline
            | assign newline
            | if_stmt
            | let_stmt
            | fun_def newline
assign:     ident ":=" _expr
            | ident ":=" custom_expr
if_stmt:    "if" ident "then" newline block newline ("else" newline block newline)?
let_stmt:   "let" newline ident ":=" _expr newline "in" newline block newline
const:      "True" -> true
            | "False" -> false
            | SIGNED_NUMBER -> num
_expr:       ident
            | const
            | bin_op
            | fun_call
            | "(" _expr ")"              //Convenience for readability
custom_expr:    /.+/
fun_def:    WORD WORD* block
block:  "{" newline _stmt+ newline "}"
fun_call:   WORD "(" _fun_args? ")" newline
_fun_args:  _expr | _expr "," _fun_args
layer_def: ident "::" ident "::"  /.+/  -> layer
bin_op:     _expr OP _expr
OP: "+" | "-" | "*" | "==" | "!=" | "<" | ">" | "<=" | ">="

%import common.WORD
%import common.WS_INLINE
%import common.SIGNED_NUMBER
%import common.SQL_COMMENT
%import common.NEWLINE
%ignore WS_INLINE
%ignore SQL_COMMENT
