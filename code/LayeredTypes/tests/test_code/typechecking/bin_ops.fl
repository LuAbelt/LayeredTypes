-- Test for correct type checking of binary expressions

resultNum::typecheck:: long
resultBool::typecheck:: bool

byteNum::typecheck:: byte
shortNum::typecheck:: short
intNum::typecheck:: int
longNum::typecheck:: long

left::typecheck:: bool
right::typecheck:: bool

-- Variable declarations
byteNum := 1
shortNum := 2
intNum := 3
longNum := 4

left := True
right := False

-- Addition
resultNum := 1 + 2
resultNum := byteNum + shortNum
resultNum := byteNum + intNum
resultNum := byteNum + longNum
resultNum := shortNum + intNum
resultNum := shortNum + longNum
resultNum := intNum + longNum

-- Subtraction
resultNum := byteNum - shortNum
resultNum := byteNum - intNum
resultNum := byteNum - longNum
resultNum := shortNum - intNum
resultNum := shortNum - longNum
resultNum := shortNum - byteNum
resultNum := intNum - longNum
resultNum := intNum - byteNum
resultNum := intNum - shortNum
resultNum := longNum - byteNum
resultNum := longNum - shortNum
resultNum := longNum - intNum

-- Multiplication
resultNum := byteNum * shortNum
resultNum := byteNum * intNum
resultNum := byteNum * longNum
resultNum := shortNum * intNum
resultNum := shortNum * longNum
resultNum := intNum * longNum

-- Comparisons
resultBool := byteNum < shortNum
resultBool := byteNum > shortNum
resultBool := byteNum <= shortNum
resultBool := byteNum >= shortNum
resultBool := byteNum == shortNum
resultBool := byteNum != shortNum

-- Logical operators
resultBool := left && right
resultBool := left || right
